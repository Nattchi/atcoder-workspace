#!/usr/bin/env python3

import sys
from typing import List


YES: str = "Yes"
NO: str = "No"


def solve(H: int, W: int, A: "List[str]", B: "List[str]") -> None:
    for s in range(H):
        for t in range(W):
            is_exist: bool = True
            for h in range(H):
                for w in range(W):
                    if A[(h - s + H) % H][(w - t + W) % W] != B[h][w]:
                        is_exist = False
            if is_exist:
                print(YES)
                return
    print(NO)

# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H: int = int(next(tokens))
    W: int = int(next(tokens))
    A: List[str] = [next(tokens) for _ in range(H)]
    B: List[str] = [next(tokens) for _ in range(H)]

    solve(H, W, A, B)


if __name__ == '__main__':
    main()
